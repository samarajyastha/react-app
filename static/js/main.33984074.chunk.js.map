{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMonsters","searchField","setSearchField","filteredMonsters","filter","toLowerCase","includes","useEffect","fetch","then","response","json","users","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAgBeA,EAbF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAQG,GAAlC,0BACHC,IAAI,YAEN,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCIHC,G,MAXE,SAACC,GAChB,IAAQC,EAAaD,EAAbC,SACR,OACE,qBAAKR,UAAU,YAAf,SACGQ,EAASC,KAAI,SAACV,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCDZQ,EANG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBAAOC,KAAK,SAASF,YAAaA,EAAaG,SAAUF,KC0B9CG,EA1BH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBS,EAAjB,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAEMC,EAAmBZ,EAASa,QAAO,SAACtB,GAAD,OACvCA,EAAQK,KAAKkB,cAAcC,SAASL,EAAYI,kBASlD,OANAE,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWZ,EAAYY,QAC9B,CAACX,IAGF,sBAAKlB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAa,qBACbC,aAAc,SAACkB,GAAD,OAAOX,EAAeW,EAAEC,OAAOC,UAE/C,cAAC,EAAD,CAAUxB,SAAUY,QCbXa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.33984074.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nconst Card = ({ monster }) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/Card\";\nimport \"./card-list.css\";\n\nconst CardList = (props) => {\n  const { monsters } = props;\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input type=\"search\" placeholder={placeholder} onChange={handleChange} />\n  );\n};\n\nexport default SearchBox;\n","import { useEffect, useState } from \"react\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nconst App = () => {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  const filteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, [searchField]);\n\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder={\"Search monsters...\"}\n        handleChange={(e) => setSearchField(e.target.value)}\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}